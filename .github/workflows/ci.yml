name: Release & Deploy
on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "VERSION_NO_V=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ hashFiles('docs/requirements.txt') }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install dependencies
        run: |
          cd docs
          pip install mkdocs-material mike

      - name: Deploy Documentation
        run: |
          cd docs
          mike deploy --config-file mkdocs.yml --push --message "Deployed ${{ steps.get_version.outputs.VERSION }}" ${{ steps.get_version.outputs.VERSION_NO_V }}
          mike set-default --push ${{ steps.get_version.outputs.VERSION_NO_V }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false

  publish:
    needs: docs
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ github.event.repository.name }}
    permissions:
      id-token: write # OIDC authentication with PyPI

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
